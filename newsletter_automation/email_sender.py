import smtplib
import re
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.image import MIMEImage
from typing import List
import logging
import os

logger = logging.getLogger(__name__)

class EmailSender:
    def __init__(self, smtp_server: str, smtp_port: int, sender_email: str, sender_password: str):
        """Initialize email sender with SMTP configuration."""
        self.smtp_server = smtp_server
        self.smtp_port = smtp_port
        self.sender_email = sender_email
        self.sender_password = sender_password

    @staticmethod
    def validate_email(email: str) -> bool:
        """Validate email format using regex."""
        email_regex = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        return bool(re.match(email_regex, email))

    @staticmethod
    def validate_emails(emails: List[str]) -> List[str]:
        """Validate a list of emails and return invalid ones."""
        invalid_emails = []
        for email in emails:
            if not EmailSender.validate_email(email.strip()):
                invalid_emails.append(email)
        return invalid_emails

    def send_newsletter(self, recipient_emails: List[str], subject: str, content: str) -> tuple[bool, str]:
        """Send newsletter to multiple recipients."""
        try:
            # Validate emails first
            invalid_emails = self.validate_emails(recipient_emails)
            if invalid_emails:
                return False, f"Invalid email addresses: {', '.join(invalid_emails)}"

            # Create message
            msg = MIMEMultipart('related')
            msg['From'] = self.sender_email
            msg['To'] = ', '.join(recipient_emails)
            msg['Subject'] = subject

            # Create the HTML part
            html_part = MIMEMultipart('alternative')
            msg.attach(html_part)

            # Add logo
            logo_path = 'slickbit_technologies_logo.jpeg'
            if os.path.exists(logo_path):
                with open(logo_path, 'rb') as f:
                    logo = MIMEImage(f.read())
                    logo.add_header('Content-ID', '<logo>')
                    msg.attach(logo)

            # Create HTML content with modern styling
            html_content = f"""
            <html>
                <head>
                    <style>
                        body {{
                            font-family: Arial, sans-serif;
                            line-height: 1.6;
                            color: #333;
                            max-width: 800px;
                            margin: 0 auto;
                            padding: 20px;
                        }}
                        .header {{
                            text-align: center;
                            margin-bottom: 30px;
                            padding: 20px;
                            background-color: #f8f9fa;
                            border-radius: 5px;
                        }}
                        .logo {{
                            max-width: 200px;
                            margin-bottom: 20px;
                        }}
                        .content {{
                            background-color: white;
                            padding: 20px;
                            border-radius: 5px;
                            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                        }}
                        h1 {{
                            color: #2c3e50;
                            border-bottom: 2px solid #eee;
                            padding-bottom: 10px;
                        }}
                        h2 {{
                            color: #34495e;
                            margin-top: 25px;
                        }}
                        p {{
                            margin-bottom: 15px;
                        }}
                        .footer {{
                            margin-top: 30px;
                            padding-top: 20px;
                            border-top: 1px solid #eee;
                            text-align: center;
                            color: #666;
                            font-size: 0.9em;
                        }}
                    </style>
                </head>
                <body>
                    <div class="header">
                        <img src="cid:logo" alt="Slickbit Technologies Logo" class="logo">
                        <h1>{subject}</h1>
                    </div>
                    <div class="content">
                        {content}
                    </div>
                    <div class="footer">
                        <p>Generated by AI Newsletter Generator</p>
                        <p>Â© {os.getenv('SENDER_EMAIL')}</p>
                    </div>
                </body>
            </html>
            """
            html_part.attach(MIMEText(html_content, 'html'))

            # Connect to SMTP server and send email
            with smtplib.SMTP(self.smtp_server, self.smtp_port) as server:
                server.starttls()
                server.login(self.sender_email, self.sender_password)
                server.send_message(msg)

            logger.info(f"Newsletter sent successfully to {len(recipient_emails)} recipients")
            return True, "Newsletter sent successfully!"

        except Exception as e:
            error_msg = f"Failed to send newsletter: {str(e)}"
            logger.error(error_msg)
            return False, error_msg 